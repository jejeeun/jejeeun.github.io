# Site
repository: sproogen/resume-theme
favicon: images/favicon.ico

# Content configuration version
version: 2

# Personal info
name: 이제은
title: Software Engineer
email: dlwpdms1@gmail.com
website: https://github.com/jejeeun

# Dark Mode (true/false/never)
darkmode: never

# Social links
# twitter_username: facespics
# github_username:  sproogen
# stackoverflow_username: "00000001"
# dribbble_username: jekyll
# facebook_username: jekyll
# flickr_username: jekyll
# instagram_username: jameswgrant
# linkedin_username: jameswgrant
# xing_username: jekyll
# pinterest_username: jekyll
# youtube_username: globalmtb
# googleplus_username: +jekyll
# orcid_username: 0000-0000-0000-0000

# Additional icon links
# additional_links:
# - title: itsgoingto.be
#   icon: fas fa-globe
#   url: https://www.itsgoingto.be
# - title: another link
#   icon: font awesome brand icon name (eg. fab fa-twitter) (https://fontawesome.com/icons?d=gallery&m=free)
#   url: Link url (eg. https://google.com)

# Google Analytics and Tag Manager
# Using more than one of these may cause issues with reporting
# gtm: "GTM-0000000"
# gtag: "UA-00000000-0"
# google_analytics: "UA-00000000-0"

# About Section
# about_title: About Me
about_profile_image: images/profile.jpg
about_content: | # this will include new lines to allow paragraphs
  일의 시작은 항상 흐름과 큰 그림을 이해하는 것부터라고 생각하는, 4년차 백엔드 개발자 이제은입니다.<br><br>
  개발을 할 때도 마찬가지로, 주어진 기능만 구현하기보다는 "왜 이런 문제가 생겼을까?" "어떻게 하면 더 근본적으로 해결할 수 있을까?"를 먼저 고민합니다. 금융·공공 도메인에서 <mark>Java</mark>와 <mark>Spring</mark> 기반 서비스를 개발하면서 이런 접근 방식이 얼마나 중요한지 깨달았습니다.<br><br>
  증권 OpenAPI 프로젝트에서 각 모듈마다 제각각인 캐시 설정으로 인한 개발 비효율성을 발견했을 때도, 당장의 해결보다는 Redis와 로컬 캐시를 통합 관리하는 공통 라이브러리를 설계해 팀 전체의 근본적인 문제를 해결했습니다. 그 결과 팀 전체의 개발 효율성을 높일 수 있었습니다.<br><br>
  이런 식으로 문제의 근본 원인을 찾아 구조적 해결책을 제시하는 것이 저의 가장 큰 강점이라고 생각합니다. 4년간의 개발을 하면서 좋은 개발자란 주어진 요구사항을 구현하는 사람이 아니라, 문제의 본질을 이해하고 더 나은 방향을 제시할 수 있는 사람이라고 깨달았습니다. 앞으로는 더 크고 복잡한 도메인에서 이런 문제 해결 능력을 발휘하며, 기술이 단순한 도구가 아닌 경쟁력이 되도록 만드는 개발자가 되고 싶습니다.
content:
  - title: Work Experience # Title for the section
    layout: list # Type of content section (list/text)
    content:
      - layout: left
        title: Asset Chain
        # link: boringcompany.com
        # link_text: boringcompany.com
        sub_title: Software Engineer
        caption: 2024.01 - 현재
        quote: >
          증권사 대상 금융 IT 솔루션 전문기업. 웹인프라팀 신설과 함께 초기 멤버로 합류하여 회사 첫 OpenAPI 사업 수주에 기여
        description: |
          **증권 OpenAPI 시스템 (2024.04 – 2025.06)**

            - Spring Boot 멀티모듈 구조의 공통 캐시 라이브러리 개발로 Redis와 로컬 캐시 간 YAML 설정 기반 전환 지원
            - WebFlux 게이트웨이에 비동기 클러스터 캐시 연동으로 API 처리 성능 최적화 (TPS 5,000 달성)
            - 파일 I/O 병목 해결을 위한 Hazelcast 분산 로깅 시스템 구축 (WAS 응답속도 25% 개선)
            - Vue3 기반 통합 API 테스트베드 구축으로 기존 증권사 테스트베드 오작동 문제 해결 (고객 도입 프로세스 안정화)
            - 관리자 백오피스 풀스택 구축 (TR 명세서 엑셀 업로드 자동화로 운영자 작업시간 70% 단축)
            - 웹 보안 필터 모듈 구축으로 OWASP ZAP 보안감사 통과 (High Risk 취약점 0건)
            - OpenTelemetry 분산 트레이싱 도입으로 장애 원인 파악 시간 대폭 단축
            - Jenkins 기반 무중단 배포 자동화 파이프라인 구성
            
          **한화 증권 모니터링 시스템 (2024.01 - 2024.06)**

          Asset Chain 입사 후 첫 프로젝트로 한화증권의 기존 모니터링 시스템 고도화를 담당하였습니다.<br><br>

            - 증권사 핵심 업무 시스템(거래/정산/중계 등) 6개 연동 통합 모니터링을 위한 Prometheus + Grafana 구축
            - 배치 작업 모니터링 한계 해결을 위한 Pushgateway 메트릭 수집 시스템 구축
            - 장애 대응 지연 개선을 위한 임계값 기반 알람 시스템 구축 (감지 시간 30분 → 3분 단축)

          

      - layout: left
        title: Ejsoft
        sub_title: Software Engineer
        caption: 2021.06 - 2023.12
        quote: >
          자동차 배출가스 운행제한 단속 솔루션 전문기업. 전국 9개 지자체 운행제한 시스템 구축 및 운영으로 해당 분야 국내 점유율 1위 보유
        description: |
          **자동차 운행 제한 시스템 (2021.06 ~ 2023.12)**
          - 전자정부 프레임워크 기반 환경부 자동차 운행제한 시스템 신규 개발 및 유지보수
          - 신규 운행제한 제도 대응을 위한 레거시 시스템 인터페이스 확장 개발 (대구 요일제, 부산/광주/세종/울산 계절제 등 6개 지자체 적용으로 매출 확대 기여)
          - MariaDB 최대 10억건 배치 성능 최적화를 통한 단계별 개선 (총 10배 성능 향상)
            - 1차: 복합 인덱스 재설계 및 CASE WHEN 조건문 최적화 (10시간 → 5시간)
            - 2차: 대용량 데이터 청크 단위 처리 및 쿼리 리팩토링 (5시간 → 2시간)
            - 3차: 트랜잭션 분할 및 배치-웹 간 락 경합 최소화 (2시간 → 1시간)
          - JSP, jQuery, MyBatis, AJAX 기반 행정용 웹 시스템 구축

          **CCTV 번호판 자동 검수 시스템 (2023.01 ~ 2023.12)**
          - Python YOLOv5 기반 AI 자동 검수 시스템으로 주무관 업무 효율화 (대용량 이미지 일괄 처리 자동화 및 99% 정확도 달성)
          - Electron + Vue.js 기반 데스크톱 애플리케이션으로 MECAR 시스템 연동 및 전체 워크플로우 구현
          - 적발차량 이미지 검수부터 불일치 목록 생성, 고지서 발급까지 end-to-end 자동화 파이프라인 구축

  - title: Projects
    layout: list
    content:
      - layout: left
        title: 코아페 (Itez)
        sub_title: Backend Engineer
        caption: 2025.01 - 2025.05
        description: |
          **코아페 - 아파트 단지 주민 대상 지역 멤버십 플랫폼**
          - 기존 Firebase/Firestore 기반 서버리스 아키텍처의 높은 운영비용과 확장성 한계 해결
          - Firebase Cloud Functions를 Spring Boot REST API로 전환하여 가변 호출 비용을 고정 인프라 비용으로 개선
          - 복잡한 쿼리 요구사항 대응을 위해 NoSQL에서 PostgreSQL로 점진적 데이터 마이그레이션을 통한 아키텍처 전환
          - PostgreSQL JSONB + GIN 인덱스 활용한 텍스트 검색 성능 최적화
          - 사용자 3개월 활성도 분석 기반 차등 포인트 지급 배치 로직 구현
          - Firebase Realtime Database → WebSocket 기반 실시간 통신으로 전환

  - title: Skills
    layout: text
    content: |
      **Backend Development**
      - Java 8/17/21, Spring Boot 3.2, Mybatis (3년 이상)  
        - 금융·공공 API 시스템 개발, 멀티모듈 기반 백엔드 구현 경험
      - MySQL 8.0, MariaDB 11, PostgreSQL 15  
        - 도메인별 모델링, 대용량 배치 조회 및 쿼리 성능 개선
      - Redis 7.x, Hazelcast 5.x 
        - OpenAPI 시스템 캐시 및 Pub/Sub 구조 구현, 캐시 백엔드 전환 지원
      - Spring Batch  
        - 정형 파일 파싱 및 Redis/Hazelcast 캐시 적재 배치 구현

      **DevOps & Infrastructure**
      - Docker, Jenkins, GitLab , Nexus
        - RHEL 폐쇄망 서버에서 수동 설치 및 CI/CD 파이프라인 구성, 무중단 배포 운영
      - OpenTelemetry, Prometheus, Grafana, Elasticsearch, Logstash, Zipkin  
        - 증권 API 트랜잭션 추적 및 장애 대응을 위한 모니터링 아키텍처 구축
      - Nginx  
        - API Gateway에 SSL 인증서, WebSocket 프록시, WAF(ModSecurity + OWASP CRS) 구성
        
      **Frontend Development**
      - Vue 3, JavaScript (ES6+)  ㄴ
        - 관리자 백오피스 및 테스트베드 UI 구현 (WebSocket 기반 실시간 로그 조회 포함)
      - JSP, jQuery  
        - 지자체 공공 시스템 유지보수 및 기능 개선 (전자정부 프레임워크 기반)

  - title: Certificates
    layout: text
    content: |
      <table class="cert-table">
        <thead>
          <tr>
            <th>이름</th>
            <th>등록번호</th>
            <th>발행처</th>
            <th>취득일</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td>정보처리기사</td>
            <td>24202020742J</td>
            <td>한국산업인력공단</td>
            <td>2024.09.10</td>
          </tr>
          <tr>
            <td>SQL Developer</td>
            <td>ISQLD-047004046</td>
            <td>한국데이터산업진흥원</td>
            <td>2022.12.02</td>
          </tr>
        </tbody>
      </table>

  - title: Education
    layout: text
    content: |
      <div class="education-line">
        <strong>홍익대학교</strong>
        <span class="degree">컴퓨터공학과 학사 졸업</span>
        <span class="period">(2017.03 ~ 2022.08)</span>
      </div>

# Footer
footer_show_references: true
# references_title: References on request (Override references text)

# Build settings
remote_theme: sproogen/resume-theme

sass:
  sass_dir: _sass
  style: compressed

plugins:
 - jekyll-seo-tag
